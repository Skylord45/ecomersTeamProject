<%- include('partials/header') %>

<head>
  <title>Home</title>
  <style>
    *body {
      margin: 0;
      padding: 0;
      font-family: Verdana, Geneva, Tahoma, sans-serif;
    }

    main {
      margin: 70px;
      font-family: Verdana, Geneva, Tahoma, sans-serif;
    }

    main .container .cart {
      width: 100%;
      display: flex;
      gap: 10px;
      flex-direction: column;
    }

    main .container .cart .cart-row {
      height: 20%;
      display: grid;
      grid-template-columns: 1fr 2fr 1fr 1fr 1fr 1fr;
      align-items: center;
      text-align: center;
    }

    main .container .cart .cart-row img {
      height: 100px;
      width: auto;
    }

    main .container .cart .cart-row input {
      width: 50%;
      padding: 5px;
      font-size: 14px;
      border: 1px solid #ccc;
      border-radius: 5px;
      outline: none;
    }

    main .container .cart .cart-row .edit {
      padding: 5px;
      width: 50px;
    }

    .item-name-description .item-name-details {
      color: #088179;
      margin-bottom: -8px;
    }

    main .order-total {
      border: 1px solid #ccc;
      width: 80%;
      color: grey;
      padding: 0 20px 0;
      margin: 50px auto;
    }

    table {
      width: 100%;
      color: black;
      border-style: none;
      border: 1px solid #ccc;
      border-collapse: collapse;
    }

    th,
    td {
      border: 1px solid #ddd;
      padding: 8px;
      text-align: left;
    }

    th {
      background-color: #f2f2f2;
    }

    .checkoutbtn {
      text-align: center;
    }

    .buy-button {
      justify-content: center;
      align-items: center;
      padding: 5px 10px;
      margin: 20px 0 20px;
      border: rgba(5, 145, 145, 0.808);
      border-radius: 5px;
      width: 200px;
      height: 50px;
      font-size: 15px;
      color: white;
      background-color: rgba(5, 145, 145, 0.808);
    }

    .buy-button:hover {
      cursor: pointer;
      background-color: white;
      color: rgba(5, 145, 145, 0.808);
      border: 2px solid rgba(5, 145, 145, 0.808);
    }
  </style>
</head>
<main>
  <div class="container">
    <h1>Shopping Cart</h1>
    <div id="cart" class="cart">
      <div class="cart-row">
        <div class="image">
          <p>Image</p>
        </div>
        <div class="item-name">
          <p>Name</p>
        </div>
        <div class="price">
          <p>Price</p>
        </div>
        <div class="quantity">
          <p>Quantity</p>
        </div>
        <div class="subtotal">
          <p>Subtotal</p>
        </div>
        <div class="edit">
          <p>Edit</p>
        </div>
      </div>
    </div>
  </div>
  <div class="order-total">
    <h3>Cart Total</h3>
    <table>
      <tr>
        <td>Cart Subtotal</td>
        <td id="cart_subtotal">123</td>
      </tr>
      <tr>
        <td>Shipping</td>
        <td id="shipping_charge">Rs 50</td>
      </tr>
      <tr>
        <td>Total</td>
        <td class="total" id="total">0.00</td>
      </tr>
    </table>
    <div class="checkoutbtn">
      <button type="button" id="cartBuyBtn" class="buy-button">
        Proceed to checkout
      </button>
    </div>
  </div>
</main>
<script>
  async function runScript() {
    async function fetchCartData() {
      let res = await fetch("/fetchCartData?user_id=1");

      let result = await res.json();
      // console.log(result, "ye mera vala result")
      let cartArray = result.data;
      return cartArray;
    }
    var cartDetails = await fetchCartData();

    // console.log(cartDetails, "cart details");

    for (let i = 0; i < cartDetails.length; i++) {
      cartDetails[i]["subtotal"] =
        +cartDetails[i]["price"] * +cartDetails[i]["quantity"];
    }

    const cartElement = document.getElementById("cart");

    const totalElement = document.getElementById("total");

    const cart_subtotal = document.getElementById("cart_subtotal");

    let cartBuyBtn = document.getElementById("cartBuyBtn");

    function updateTotal() {
      // console.log("ravi")
      const total = cartDetails.reduce((acc, item) => {
        // console.log(item,"item")
        const checkbox = document.querySelector(
          `.buy_selected[value="${item.cart_id}"]`
        );

        if (checkbox && checkbox.checked) {
          return acc + +item.subtotal;
        }
        if (acc == 0) {
          document.getElementById("shipping_charge").innerHTML = "Rs 00";
        } else {
          document.getElementById("shipping_charge").innerHTML = "Rs 50";
        }
        return acc;
      }, 0);
      if (total == 0) {
        document.getElementById("shipping_charge").innerHTML = "Rs 00";
        totalElement.textContent = `Rs 00 `;
        cart_subtotal.textContent = `Rs 00`;
        cartBuyBtn.disabled = true;
        cartBuyBtn.innerHTML = "no items selected";
      } else {
        document.getElementById("shipping_charge").innerHTML = "Rs 50";
        cart_subtotal.textContent = `Rs ${total.toFixed(2)}`;
        totalElement.textContent = `Rs ${+total.toFixed(2) + 50} `;
        cartBuyBtn.disabled = false;
        cartBuyBtn.innerHTML = "Proceed to checkout";
      }
    }

    cartDetails.forEach((item) => {
      const cartRow = document.createElement("div");

      cartRow.classList.add("cart-row");

      cartRow.innerHTML = `

        <div class="image"><img src="${item.image_path}" alt="Item"></div>

        <div class="item-name-description"><p class="item-name-details">${
          item.product_name
        }</p><p class="item-description-details">${item.description}</p></div>

        <div class="price">${item.price.toFixed(2)} &#8377;</div>

        <div class="quantity"><input type="number" class="quantity-input" value="${
          item.quantity
        }" min="1"></div>

        <div class="subtotal">${item.subtotal.toFixed(2)}</div>

        <div class="edit"><input type="checkbox" class="buy_selected" value="${
          item.cart_id
        }" checked></div>

        <div class="cartRemovebtn"> <button type="button" class="cartRemoveBtn" onclick="removeItemFromCartFun(${
          item.cart_id
        })">Remove</button></div>
    `;

      const quantityInput = cartRow.querySelector(".quantity-input");

      const subtotalElement = cartRow.querySelector(".subtotal");

      const checkbox = cartRow.querySelector(".buy_selected");

      quantityInput.addEventListener("change", () => {
        const newQuantity = parseInt(quantityInput.value);

        if (newQuantity > 0) {
          item.quantity = newQuantity;

          item.subtotal = (item.price * newQuantity).toFixed(2);

          subtotalElement.textContent = `${item.subtotal}`;

          updateTotal();
        }
      });

      checkbox.addEventListener("change", () => {
        updateTotal();
      });

      cartElement.appendChild(cartRow);
    });

    updateTotal();

    cartBuyBtn.addEventListener("click", async () => {
      const buySelected = document.querySelectorAll(".buy_selected");

      const itemsToBuy = [];

      buySelected.forEach((checkbox) => {
        if (checkbox.checked) {
          const itemId = parseInt(checkbox.value);

          const selectedItem = cartDetails.find(
            (item) => item.cart_id === itemId
          );

          if (selectedItem) {
            itemsToBuy.push({
              ...selectedItem,
            });
          }
        }
      });
      console.log(itemsToBuy, "item to buy");

      let quantityAndVenderProductIdArray = [];
      itemsToBuy.forEach((item) => {
        quantityAndVenderProductIdArray.push({
          quantity: item.quantity,
          venderProductId: item.vendor_product_id,
        });
      });
      console.log(quantityAndVenderProductIdArray, "this is data ");

      let res = await fetch("/beforeCheckoutPageQuantityCheckApi", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(quantityAndVenderProductIdArray),
      });
      let result = await res.json();
      if (res.status == 202) {
        // let msg = ''

        let data = result.data;

        console.log(data, "kkkkkk");
     let final_msg = [] 
       for(let i = 0 ; i<data.length ; i++){
          let array = data[i].split("##");
          let id = array[1];
          // console.log(array,"gggg")
          let newarr = [...array]
        

          let currObj = itemsToBuy.find(
            (element) => element.vendor_product_id === +id);

            newarr[1] = currObj['product_name'];
            // console.log(newarr,"kokokok")
            final_msg.push(newarr.join(" "))

          
        }
        // console.log(final_msg,"newwwwwwwwwwwwww")
        // console.log(data, "kkkkkdssdsk");
        let alert_msg = ''
        
        for(msg of final_msg){
          alert_msg += msg + "\n"
        }
        alert(alert_msg)
      }else{
        localStorage.setItem("buyingItem", JSON.stringify(itemsToBuy));
        window.location.href = "/checkout";

      }

    });
  }

  async function removeItemFromCartFun(cart_id) {
    // console.log(cart_id,"cart id")

    let res = await fetch("/removeItemFromCartApi", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ cart_id: cart_id }),
    });

    let data = await res.json();
    if (res.status == 200) {
      console.log(data, "data");
      window.location.reload();
    }
  }
  runScript();
</script>
<%- include('partials/footer') %>
